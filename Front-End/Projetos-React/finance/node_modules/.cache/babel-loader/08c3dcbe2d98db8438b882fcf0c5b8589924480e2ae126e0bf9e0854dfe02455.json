{"ast":null,"code":"/**\n * Minimal Event interface implementation\n *\n * Original implementation by Sven Fuchs: https://gist.github.com/995028\n * Modifications and tests by Christian Johansen.\n *\n * @author Sven Fuchs (svenfuchs@artweb-design.de)\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2011 Sven Fuchs, Christian Johansen\n */\n\nvar _Event = function Event(type, bubbles, cancelable, target) {\n  this.type = type;\n  this.bubbles = bubbles;\n  this.cancelable = cancelable;\n  this.target = target;\n};\n_Event.prototype = {\n  stopPropagation: function () {},\n  preventDefault: function () {\n    this.defaultPrevented = true;\n  }\n};\n\n/*\n  Used to set the statusText property of an xhr object\n*/\nvar httpStatusCodes = {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  300: \"Multiple Choice\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Request Entity Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  422: \"Unprocessable Entity\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\"\n};\n\n/*\n  Cross-browser XML parsing. Used to turn\n  XML responses into Document objects\n  Borrowed from JSpec\n*/\nfunction parseXML(text) {\n  var xmlDoc;\n  if (typeof DOMParser != \"undefined\") {\n    var parser = new DOMParser();\n    xmlDoc = parser.parseFromString(text, \"text/xml\");\n  } else {\n    xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n    xmlDoc.async = \"false\";\n    xmlDoc.loadXML(text);\n  }\n  return xmlDoc;\n}\n\n/*\n  Without mocking, the native XMLHttpRequest object will throw\n  an error when attempting to set these headers. We match this behavior.\n*/\nvar unsafeHeaders = {\n  \"Accept-Charset\": true,\n  \"Accept-Encoding\": true,\n  \"Connection\": true,\n  \"Content-Length\": true,\n  \"Cookie\": true,\n  \"Cookie2\": true,\n  \"Content-Transfer-Encoding\": true,\n  \"Date\": true,\n  \"Expect\": true,\n  \"Host\": true,\n  \"Keep-Alive\": true,\n  \"Referer\": true,\n  \"TE\": true,\n  \"Trailer\": true,\n  \"Transfer-Encoding\": true,\n  \"Upgrade\": true,\n  \"User-Agent\": true,\n  \"Via\": true\n};\n\n/*\n  Adds an \"event\" onto the fake xhr object\n  that just calls the same-named method. This is\n  in case a library adds callbacks for these events.\n*/\nfunction _addEventListener(eventName, xhr) {\n  xhr.addEventListener(eventName, function (event) {\n    var listener = xhr[\"on\" + eventName];\n    if (listener && typeof listener == \"function\") {\n      listener.call(event.target, event);\n    }\n  });\n}\nfunction EventedObject() {\n  this._eventListeners = {};\n  var events = [\"loadstart\", \"progress\", \"load\", \"abort\", \"loadend\"];\n  for (var i = events.length - 1; i >= 0; i--) {\n    _addEventListener(events[i], this);\n  }\n}\n;\nEventedObject.prototype = {\n  /*\n    Duplicates the behavior of native XMLHttpRequest's addEventListener function\n  */\n  addEventListener: function addEventListener(event, listener) {\n    this._eventListeners[event] = this._eventListeners[event] || [];\n    this._eventListeners[event].push(listener);\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's removeEventListener function\n  */\n  removeEventListener: function removeEventListener(event, listener) {\n    var listeners = this._eventListeners[event] || [];\n    for (var i = 0, l = listeners.length; i < l; ++i) {\n      if (listeners[i] == listener) {\n        return listeners.splice(i, 1);\n      }\n    }\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's dispatchEvent function\n  */\n  dispatchEvent: function dispatchEvent(event) {\n    var type = event.type;\n    var listeners = this._eventListeners[type] || [];\n    for (var i = 0; i < listeners.length; i++) {\n      if (typeof listeners[i] == \"function\") {\n        listeners[i].call(this, event);\n      } else {\n        listeners[i].handleEvent(event);\n      }\n    }\n    return !!event.defaultPrevented;\n  },\n  /*\n    Triggers an `onprogress` event with the given parameters.\n  */\n  _progress: function _progress(lengthComputable, loaded, total) {\n    var event = new _Event('progress');\n    event.target = this;\n    event.lengthComputable = lengthComputable;\n    event.loaded = loaded;\n    event.total = total;\n    this.dispatchEvent(event);\n  }\n};\n\n/*\n  Constructor for a fake window.XMLHttpRequest\n*/\nfunction FakeXMLHttpRequest() {\n  EventedObject.call(this);\n  this.readyState = FakeXMLHttpRequest.UNSENT;\n  this.requestHeaders = {};\n  this.requestBody = null;\n  this.status = 0;\n  this.statusText = \"\";\n  this.upload = new EventedObject();\n  this.onabort = null;\n  this.onerror = null;\n  this.onload = null;\n  this.onloadend = null;\n  this.onloadstart = null;\n  this.onprogress = null;\n  this.onreadystatechange = null;\n  this.ontimeout = null;\n}\nFakeXMLHttpRequest.prototype = new EventedObject();\n\n// These status codes are available on the native XMLHttpRequest\n// object, so we match that here in case a library is relying on them.\nFakeXMLHttpRequest.UNSENT = 0;\nFakeXMLHttpRequest.OPENED = 1;\nFakeXMLHttpRequest.HEADERS_RECEIVED = 2;\nFakeXMLHttpRequest.LOADING = 3;\nFakeXMLHttpRequest.DONE = 4;\nvar FakeXMLHttpRequestProto = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4,\n  async: true,\n  withCredentials: false,\n  /*\n    Duplicates the behavior of native XMLHttpRequest's open function\n  */\n  open: function open(method, url, async, username, password) {\n    this.method = method;\n    this.url = url;\n    this.async = typeof async == \"boolean\" ? async : true;\n    this.username = username;\n    this.password = password;\n    this.responseText = null;\n    this.response = this.responseText;\n    this.responseXML = null;\n    this.responseURL = url;\n    this.requestHeaders = {};\n    this.sendFlag = false;\n    this._readyStateChange(FakeXMLHttpRequest.OPENED);\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's setRequestHeader function\n  */\n  setRequestHeader: function setRequestHeader(header, value) {\n    verifyState(this);\n    if (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header)) {\n      throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n    }\n    if (this.requestHeaders[header]) {\n      this.requestHeaders[header] += \",\" + value;\n    } else {\n      this.requestHeaders[header] = value;\n    }\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's send function\n  */\n  send: function send(data) {\n    verifyState(this);\n    if (!/^(get|head)$/i.test(this.method)) {\n      var hasContentTypeHeader = false;\n      Object.keys(this.requestHeaders).forEach(function (key) {\n        if (key.toLowerCase() === 'content-type') {\n          hasContentTypeHeader = true;\n        }\n      });\n      if (!hasContentTypeHeader && !(data || '').toString().match('FormData')) {\n        this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n      this.requestBody = data;\n    }\n    this.errorFlag = false;\n    this.sendFlag = this.async;\n    this._readyStateChange(FakeXMLHttpRequest.OPENED);\n    if (typeof this.onSend == \"function\") {\n      this.onSend(this);\n    }\n    this.dispatchEvent(new _Event(\"loadstart\", false, false, this));\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's abort function\n  */\n  abort: function abort() {\n    this.aborted = true;\n    this.responseText = null;\n    this.response = this.responseText;\n    this.errorFlag = true;\n    this.requestHeaders = {};\n    this.dispatchEvent(new _Event(\"abort\", false, false, this));\n    if (this.readyState > FakeXMLHttpRequest.UNSENT && this.sendFlag) {\n      this._readyStateChange(FakeXMLHttpRequest.UNSENT);\n      this.sendFlag = false;\n    }\n    if (typeof this.onerror === \"function\") {\n      this.onerror();\n    }\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's getResponseHeader function\n  */\n  getResponseHeader: function getResponseHeader(header) {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return null;\n    }\n    if (/^Set-Cookie2?$/i.test(header)) {\n      return null;\n    }\n    header = header.toLowerCase();\n    for (var h in this.responseHeaders) {\n      if (h.toLowerCase() == header) {\n        return this.responseHeaders[h];\n      }\n    }\n    return null;\n  },\n  /*\n    Duplicates the behavior of native XMLHttpRequest's getAllResponseHeaders function\n  */\n  getAllResponseHeaders: function getAllResponseHeaders() {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return \"\";\n    }\n    var headers = \"\";\n    for (var header in this.responseHeaders) {\n      if (this.responseHeaders.hasOwnProperty(header) && !/^Set-Cookie2?$/i.test(header)) {\n        headers += header + \": \" + this.responseHeaders[header] + \"\\r\\n\";\n      }\n    }\n    return headers;\n  },\n  /*\n   Duplicates the behavior of native XMLHttpRequest's overrideMimeType function\n   */\n  overrideMimeType: function overrideMimeType(mimeType) {\n    if (typeof mimeType === \"string\") {\n      this.forceMimeType = mimeType.toLowerCase();\n    }\n  },\n  /*\n    Places a FakeXMLHttpRequest object into the passed\n    state.\n  */\n  _readyStateChange: function _readyStateChange(state) {\n    this.readyState = state;\n    if (typeof this.onreadystatechange == \"function\") {\n      this.onreadystatechange(new _Event(\"readystatechange\"));\n    }\n    this.dispatchEvent(new _Event(\"readystatechange\"));\n    if (this.readyState == FakeXMLHttpRequest.DONE) {\n      this.dispatchEvent(new _Event(\"load\", false, false, this));\n    }\n    if (this.readyState == FakeXMLHttpRequest.UNSENT || this.readyState == FakeXMLHttpRequest.DONE) {\n      this.dispatchEvent(new _Event(\"loadend\", false, false, this));\n    }\n  },\n  /*\n    Sets the FakeXMLHttpRequest object's response headers and\n    places the object into readyState 2\n  */\n  _setResponseHeaders: function _setResponseHeaders(headers) {\n    this.responseHeaders = {};\n    for (var header in headers) {\n      if (headers.hasOwnProperty(header)) {\n        this.responseHeaders[header] = headers[header];\n      }\n    }\n    if (this.forceMimeType) {\n      this.responseHeaders['Content-Type'] = this.forceMimeType;\n    }\n    if (this.async) {\n      this._readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n    } else {\n      this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n    }\n  },\n  /*\n    Sets the FakeXMLHttpRequest object's response body and\n    if body text is XML, sets responseXML to parsed document\n    object\n  */\n  _setResponseBody: function _setResponseBody(body) {\n    verifyRequestSent(this);\n    verifyHeadersReceived(this);\n    verifyResponseBodyType(body);\n    var chunkSize = this.chunkSize || 10;\n    var index = 0;\n    this.responseText = \"\";\n    this.response = this.responseText;\n    do {\n      if (this.async) {\n        this._readyStateChange(FakeXMLHttpRequest.LOADING);\n      }\n      this.responseText += body.substring(index, index + chunkSize);\n      this.response = this.responseText;\n      index += chunkSize;\n    } while (index < body.length);\n    var type = this.getResponseHeader(\"Content-Type\");\n    if (this.responseText && (!type || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(type))) {\n      try {\n        this.responseXML = parseXML(this.responseText);\n      } catch (e) {\n        // Unable to parse XML - no biggie\n      }\n    }\n    if (this.async) {\n      this._readyStateChange(FakeXMLHttpRequest.DONE);\n    } else {\n      this.readyState = FakeXMLHttpRequest.DONE;\n    }\n  },\n  /*\n    Forces a response on to the FakeXMLHttpRequest object.\n     This is the public API for faking responses. This function\n    takes a number status, headers object, and string body:\n     ```\n    xhr.respond(404, {Content-Type: 'text/plain'}, \"Sorry. This object was not found.\")\n     ```\n  */\n  respond: function respond(status, headers, body) {\n    this._setResponseHeaders(headers || {});\n    this.status = typeof status == \"number\" ? status : 200;\n    this.statusText = httpStatusCodes[this.status];\n    this._setResponseBody(body || \"\");\n  }\n};\nfor (var property in FakeXMLHttpRequestProto) {\n  FakeXMLHttpRequest.prototype[property] = FakeXMLHttpRequestProto[property];\n}\nfunction verifyState(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n  if (xhr.sendFlag) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n}\nfunction verifyRequestSent(xhr) {\n  if (xhr.readyState == FakeXMLHttpRequest.DONE) {\n    throw new Error(\"Request done\");\n  }\n}\nfunction verifyHeadersReceived(xhr) {\n  if (xhr.async && xhr.readyState != FakeXMLHttpRequest.HEADERS_RECEIVED) {\n    throw new Error(\"No headers received\");\n  }\n}\nfunction verifyResponseBodyType(body) {\n  if (typeof body != \"string\") {\n    var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" + body + \", which is not a string.\");\n    error.name = \"InvalidBodyException\";\n    throw error;\n  }\n}\nexport default FakeXMLHttpRequest;","map":{"version":3,"names":["_Event","Event","type","bubbles","cancelable","target","prototype","stopPropagation","preventDefault","defaultPrevented","httpStatusCodes","parseXML","text","xmlDoc","DOMParser","parser","parseFromString","ActiveXObject","async","loadXML","unsafeHeaders","_addEventListener","eventName","xhr","addEventListener","event","listener","call","EventedObject","_eventListeners","events","i","length","push","removeEventListener","listeners","l","splice","dispatchEvent","handleEvent","_progress","lengthComputable","loaded","total","FakeXMLHttpRequest","readyState","UNSENT","requestHeaders","requestBody","status","statusText","upload","onabort","onerror","onload","onloadend","onloadstart","onprogress","onreadystatechange","ontimeout","OPENED","HEADERS_RECEIVED","LOADING","DONE","FakeXMLHttpRequestProto","withCredentials","open","method","url","username","password","responseText","response","responseXML","responseURL","sendFlag","_readyStateChange","setRequestHeader","header","value","verifyState","test","Error","send","data","hasContentTypeHeader","Object","keys","forEach","key","toLowerCase","toString","match","errorFlag","onSend","abort","aborted","getResponseHeader","h","responseHeaders","getAllResponseHeaders","headers","hasOwnProperty","overrideMimeType","mimeType","forceMimeType","state","_setResponseHeaders","_setResponseBody","body","verifyRequestSent","verifyHeadersReceived","verifyResponseBodyType","chunkSize","index","substring","e","respond","property","error","name"],"sources":["C:/Users/Miguelzinho/Documents/Desenvolvedor/Projeto/Curso-Web-Full-Stack/Front-End/Projetos-React/finance/node_modules/fake-xml-http-request/src/fake-xml-http-request.js"],"sourcesContent":["/**\n * Minimal Event interface implementation\n *\n * Original implementation by Sven Fuchs: https://gist.github.com/995028\n * Modifications and tests by Christian Johansen.\n *\n * @author Sven Fuchs (svenfuchs@artweb-design.de)\n * @author Christian Johansen (christian@cjohansen.no)\n * @license BSD\n *\n * Copyright (c) 2011 Sven Fuchs, Christian Johansen\n */\n\nvar _Event = function Event(type, bubbles, cancelable, target) {\n  this.type = type;\n  this.bubbles = bubbles;\n  this.cancelable = cancelable;\n  this.target = target;\n};\n\n_Event.prototype = {\n  stopPropagation: function () {},\n  preventDefault: function () {\n    this.defaultPrevented = true;\n  }\n};\n\n/*\n  Used to set the statusText property of an xhr object\n*/\nvar httpStatusCodes = {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  300: \"Multiple Choice\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Request Entity Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  422: \"Unprocessable Entity\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\"\n};\n\n\n/*\n  Cross-browser XML parsing. Used to turn\n  XML responses into Document objects\n  Borrowed from JSpec\n*/\nfunction parseXML(text) {\n  var xmlDoc;\n\n  if (typeof DOMParser != \"undefined\") {\n    var parser = new DOMParser();\n    xmlDoc = parser.parseFromString(text, \"text/xml\");\n  } else {\n    xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n    xmlDoc.async = \"false\";\n    xmlDoc.loadXML(text);\n  }\n\n  return xmlDoc;\n}\n\n/*\n  Without mocking, the native XMLHttpRequest object will throw\n  an error when attempting to set these headers. We match this behavior.\n*/\nvar unsafeHeaders = {\n  \"Accept-Charset\": true,\n  \"Accept-Encoding\": true,\n  \"Connection\": true,\n  \"Content-Length\": true,\n  \"Cookie\": true,\n  \"Cookie2\": true,\n  \"Content-Transfer-Encoding\": true,\n  \"Date\": true,\n  \"Expect\": true,\n  \"Host\": true,\n  \"Keep-Alive\": true,\n  \"Referer\": true,\n  \"TE\": true,\n  \"Trailer\": true,\n  \"Transfer-Encoding\": true,\n  \"Upgrade\": true,\n  \"User-Agent\": true,\n  \"Via\": true\n};\n\n/*\n  Adds an \"event\" onto the fake xhr object\n  that just calls the same-named method. This is\n  in case a library adds callbacks for these events.\n*/\nfunction _addEventListener(eventName, xhr){\n  xhr.addEventListener(eventName, function (event) {\n    var listener = xhr[\"on\" + eventName];\n\n    if (listener && typeof listener == \"function\") {\n      listener.call(event.target, event);\n    }\n  });\n}\n\nfunction EventedObject() {\n  this._eventListeners = {};\n  var events = [\"loadstart\", \"progress\", \"load\", \"abort\", \"loadend\"];\n  for (var i = events.length - 1; i >= 0; i--) {\n    _addEventListener(events[i], this);\n  }\n};\n\nEventedObject.prototype = {\n  /*\n    Duplicates the behavior of native XMLHttpRequest's addEventListener function\n  */\n  addEventListener: function addEventListener(event, listener) {\n    this._eventListeners[event] = this._eventListeners[event] || [];\n    this._eventListeners[event].push(listener);\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's removeEventListener function\n  */\n  removeEventListener: function removeEventListener(event, listener) {\n    var listeners = this._eventListeners[event] || [];\n\n    for (var i = 0, l = listeners.length; i < l; ++i) {\n      if (listeners[i] == listener) {\n        return listeners.splice(i, 1);\n      }\n    }\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's dispatchEvent function\n  */\n  dispatchEvent: function dispatchEvent(event) {\n    var type = event.type;\n    var listeners = this._eventListeners[type] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (typeof listeners[i] == \"function\") {\n        listeners[i].call(this, event);\n      } else {\n        listeners[i].handleEvent(event);\n      }\n    }\n\n    return !!event.defaultPrevented;\n  },\n\n  /*\n    Triggers an `onprogress` event with the given parameters.\n  */\n  _progress: function _progress(lengthComputable, loaded, total) {\n    var event = new _Event('progress');\n    event.target = this;\n    event.lengthComputable = lengthComputable;\n    event.loaded = loaded;\n    event.total = total;\n    this.dispatchEvent(event);\n  }\n}\n\n/*\n  Constructor for a fake window.XMLHttpRequest\n*/\nfunction FakeXMLHttpRequest() {\n  EventedObject.call(this);\n  this.readyState = FakeXMLHttpRequest.UNSENT;\n  this.requestHeaders = {};\n  this.requestBody = null;\n  this.status = 0;\n  this.statusText = \"\";\n  this.upload = new EventedObject();\n  this.onabort= null;\n  this.onerror= null;\n  this.onload= null;\n  this.onloadend= null;\n  this.onloadstart= null;\n  this.onprogress= null;\n  this.onreadystatechange= null;\n  this.ontimeout= null;\n}\n\nFakeXMLHttpRequest.prototype = new EventedObject();\n\n// These status codes are available on the native XMLHttpRequest\n// object, so we match that here in case a library is relying on them.\nFakeXMLHttpRequest.UNSENT = 0;\nFakeXMLHttpRequest.OPENED = 1;\nFakeXMLHttpRequest.HEADERS_RECEIVED = 2;\nFakeXMLHttpRequest.LOADING = 3;\nFakeXMLHttpRequest.DONE = 4;\n\nvar FakeXMLHttpRequestProto = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4,\n  async: true,\n  withCredentials: false,\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's open function\n  */\n  open: function open(method, url, async, username, password) {\n    this.method = method;\n    this.url = url;\n    this.async = typeof async == \"boolean\" ? async : true;\n    this.username = username;\n    this.password = password;\n    this.responseText = null;\n    this.response = this.responseText;\n    this.responseXML = null;\n    this.responseURL = url;\n    this.requestHeaders = {};\n    this.sendFlag = false;\n    this._readyStateChange(FakeXMLHttpRequest.OPENED);\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's setRequestHeader function\n  */\n  setRequestHeader: function setRequestHeader(header, value) {\n    verifyState(this);\n\n    if (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header)) {\n      throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n    }\n\n    if (this.requestHeaders[header]) {\n      this.requestHeaders[header] += \",\" + value;\n    } else {\n      this.requestHeaders[header] = value;\n    }\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's send function\n  */\n  send: function send(data) {\n    verifyState(this);\n\n    if (!/^(get|head)$/i.test(this.method)) {\n      var hasContentTypeHeader = false\n\n      Object.keys(this.requestHeaders).forEach(function (key) {\n        if (key.toLowerCase() === 'content-type') {\n          hasContentTypeHeader = true;\n        }\n      });\n\n      if (!hasContentTypeHeader && !(data || '').toString().match('FormData')) {\n        this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n\n      this.requestBody = data;\n    }\n\n    this.errorFlag = false;\n    this.sendFlag = this.async;\n    this._readyStateChange(FakeXMLHttpRequest.OPENED);\n\n    if (typeof this.onSend == \"function\") {\n      this.onSend(this);\n    }\n\n    this.dispatchEvent(new _Event(\"loadstart\", false, false, this));\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's abort function\n  */\n  abort: function abort() {\n    this.aborted = true;\n    this.responseText = null;\n    this.response = this.responseText;\n    this.errorFlag = true;\n    this.requestHeaders = {};\n\n    this.dispatchEvent(new _Event(\"abort\", false, false, this));\n\n    if (this.readyState > FakeXMLHttpRequest.UNSENT && this.sendFlag) {\n      this._readyStateChange(FakeXMLHttpRequest.UNSENT);\n      this.sendFlag = false;\n    }\n\n    if (typeof this.onerror === \"function\") {\n      this.onerror();\n    }\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's getResponseHeader function\n  */\n  getResponseHeader: function getResponseHeader(header) {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return null;\n    }\n\n    if (/^Set-Cookie2?$/i.test(header)) {\n      return null;\n    }\n\n    header = header.toLowerCase();\n\n    for (var h in this.responseHeaders) {\n      if (h.toLowerCase() == header) {\n        return this.responseHeaders[h];\n      }\n    }\n\n    return null;\n  },\n\n  /*\n    Duplicates the behavior of native XMLHttpRequest's getAllResponseHeaders function\n  */\n  getAllResponseHeaders: function getAllResponseHeaders() {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return \"\";\n    }\n\n    var headers = \"\";\n\n    for (var header in this.responseHeaders) {\n      if (this.responseHeaders.hasOwnProperty(header) && !/^Set-Cookie2?$/i.test(header)) {\n        headers += header + \": \" + this.responseHeaders[header] + \"\\r\\n\";\n      }\n    }\n\n    return headers;\n  },\n\n  /*\n   Duplicates the behavior of native XMLHttpRequest's overrideMimeType function\n   */\n  overrideMimeType: function overrideMimeType(mimeType) {\n    if (typeof mimeType === \"string\") {\n      this.forceMimeType = mimeType.toLowerCase();\n    }\n  },\n\n\n  /*\n    Places a FakeXMLHttpRequest object into the passed\n    state.\n  */\n  _readyStateChange: function _readyStateChange(state) {\n    this.readyState = state;\n\n    if (typeof this.onreadystatechange == \"function\") {\n      this.onreadystatechange(new _Event(\"readystatechange\"));\n    }\n\n    this.dispatchEvent(new _Event(\"readystatechange\"));\n\n    if (this.readyState == FakeXMLHttpRequest.DONE) {\n      this.dispatchEvent(new _Event(\"load\", false, false, this));\n    }\n    if (this.readyState == FakeXMLHttpRequest.UNSENT || this.readyState == FakeXMLHttpRequest.DONE) {\n      this.dispatchEvent(new _Event(\"loadend\", false, false, this));\n    }\n  },\n\n\n  /*\n    Sets the FakeXMLHttpRequest object's response headers and\n    places the object into readyState 2\n  */\n  _setResponseHeaders: function _setResponseHeaders(headers) {\n    this.responseHeaders = {};\n\n    for (var header in headers) {\n      if (headers.hasOwnProperty(header)) {\n          this.responseHeaders[header] = headers[header];\n      }\n    }\n\n    if (this.forceMimeType) {\n      this.responseHeaders['Content-Type'] = this.forceMimeType;\n    }\n\n    if (this.async) {\n      this._readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n    } else {\n      this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n    }\n  },\n\n  /*\n    Sets the FakeXMLHttpRequest object's response body and\n    if body text is XML, sets responseXML to parsed document\n    object\n  */\n  _setResponseBody: function _setResponseBody(body) {\n    verifyRequestSent(this);\n    verifyHeadersReceived(this);\n    verifyResponseBodyType(body);\n\n    var chunkSize = this.chunkSize || 10;\n    var index = 0;\n    this.responseText = \"\";\n    this.response = this.responseText;\n\n    do {\n      if (this.async) {\n        this._readyStateChange(FakeXMLHttpRequest.LOADING);\n      }\n\n      this.responseText += body.substring(index, index + chunkSize);\n      this.response = this.responseText;\n      index += chunkSize;\n    } while (index < body.length);\n\n    var type = this.getResponseHeader(\"Content-Type\");\n\n    if (this.responseText && (!type || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(type))) {\n      try {\n        this.responseXML = parseXML(this.responseText);\n      } catch (e) {\n        // Unable to parse XML - no biggie\n      }\n    }\n\n    if (this.async) {\n      this._readyStateChange(FakeXMLHttpRequest.DONE);\n    } else {\n      this.readyState = FakeXMLHttpRequest.DONE;\n    }\n  },\n\n  /*\n    Forces a response on to the FakeXMLHttpRequest object.\n\n    This is the public API for faking responses. This function\n    takes a number status, headers object, and string body:\n\n    ```\n    xhr.respond(404, {Content-Type: 'text/plain'}, \"Sorry. This object was not found.\")\n\n    ```\n  */\n  respond: function respond(status, headers, body) {\n    this._setResponseHeaders(headers || {});\n    this.status = typeof status == \"number\" ? status : 200;\n    this.statusText = httpStatusCodes[this.status];\n    this._setResponseBody(body || \"\");\n  }\n};\n\nfor (var property in FakeXMLHttpRequestProto) {\n  FakeXMLHttpRequest.prototype[property] = FakeXMLHttpRequestProto[property];\n}\n\nfunction verifyState(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n\n  if (xhr.sendFlag) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n}\n\n\nfunction verifyRequestSent(xhr) {\n    if (xhr.readyState == FakeXMLHttpRequest.DONE) {\n        throw new Error(\"Request done\");\n    }\n}\n\nfunction verifyHeadersReceived(xhr) {\n    if (xhr.async && xhr.readyState != FakeXMLHttpRequest.HEADERS_RECEIVED) {\n        throw new Error(\"No headers received\");\n    }\n}\n\nfunction verifyResponseBodyType(body) {\n    if (typeof body != \"string\") {\n        var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" +\n                             body + \", which is not a string.\");\n        error.name = \"InvalidBodyException\";\n        throw error;\n    }\n}\nexport default FakeXMLHttpRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}